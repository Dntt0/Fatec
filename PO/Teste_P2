from machine import Pin, I2C, ADC, RTC, Timer
from time import sleep
from math import log
import urequests
import requests
import ssd1306
import network
import umail
import utime
import dht
import esp
import gc
 
print("----- Iniciando -----")
 
sensor = dht.DHT11(Pin(2)) 
pot = ADC(Pin(34))
bt = Pin(4, Pin.IN, Pin.PULL_UP)
led_verm = Pin(25, Pin.OUT)  
led_verd = Pin(26, Pin.OUT)
 
esp.osdebug(None)
gc.collect()
 
ssid = 'CARLOS'
password = 'sp181309'
phone_number = '5511984921381'
api_key = '4638363'
 
sender_email = 'mendes.alessandro34@gmail.com'
sender_name = 'ESP32-Integração Email & Whats'
sender_app_password = 'ygxb hqlo uvzj clmi'
recipient_email ='mendes.alessandro34@gmail.com'
email_subject ='Test Email'
 
print('##### Iniciando conexão Wi-Fi')
station = network.WLAN(network.STA_IF)
station.active(False)
sleep(2)
station.active(True)
station.connect(ssid, password)
 
while not station.isconnected():
    print('-', end=" ")
    sleep(0.2)
 
print("\nConexão OK")
print("IP:", station.ifconfig()[0])
print("Máscara:", station.ifconfig()[1])
print("Gateway:", station.ifconfig()[2])
print("DNS:", station.ifconfig()[3])
 
rtc = RTC()
anterior = ''
horario = ''
 
i2c = I2C(scl=Pin(22), sda=Pin(23))
oled_width = 128
oled_heigth = 64
oled = ssd1306.SSD1306_I2C(oled_width, oled_heigth, i2c)
 
oled.fill(0)
oled.rect(0, 0, 128, 64, 1)
oled.text('Projeto P2', 26, 10)
oled.text('Pedro H Donato', 10, 25)
oled.text('Alessandro', 13, 40)
oled.show()
 
sleep(2)
 
oled.fill_rect(0,15,128,64,0)
oled.show()
 
def send_message(phone_number, api_key, message):
  url = 'https://api.callmebot.com/whatsapp.php?phone='+phone_number+'&text='+message+'&apikey='+api_key
  response = requests.get(url)
  if response.status_code == 200:
    print('Success!')
  else:
    print('Error')
    print(response.text)
 
def sincronizar_relogio():
    global horario
    try:
        timezone = 'America/Sao_Paulo'
        api_url = 'https://api.api-ninjas.com/v1/worldtime?timezone={}'.format(timezone)
        resposta = urequests.get(api_url, headers={'X-Api-Key': 'J30jOg+U/B+NYrGHBJl/zA==b5uV7gzrv105oSPu'})
        print('JSON:', resposta.text)
        json = resposta.json()
        agora = str(json["datetime"])
        ano = int(agora[0:4])
        mes = int(agora[5:7])
        dia = int(agora[8:10])
        hora = int(agora[11:13])
        minuto = int(agora[14:16])
        segundo = int(agora[17:19])
        rtc.datetime((ano, mes, dia, 0, hora, minuto, segundo, 0))
        print("RTC ATUALIZADO:", rtc.datetime())
        horario = "{:02d}:{:02d}".format(rtc.datetime()[4], rtc.datetime()[5])
    except Exception as e:
        print('>>>> Erro: sem acesso à internet ou erro na API:', e)
 
message = 'a'
def msg_whatsapp(message):
    send_message(phone_number, api_key, message)

msg = 'a'
def msg_email(msg):
        smtp = umail.SMTP('smtp.gmail.com', 465, ssl=True)
        smtp.login(sender_email, sender_app_password)
        smtp.to(recipient_email)
        smtp.write("From:" + sender_name + "<" + sender_email + ">\n")
        smtp.write("Subject:" + email_subject + "\n\n")
        smtp.send(msg)
        smtp.quit()
 
sincronizar_relogio()
 
while True:
    data = "{:02d}/{:02d}/{:04d}".format(rtc.datetime()[2], rtc.datetime()[1], rtc.datetime()[0])
    horario = "{:02d}:{:02d}".format(rtc.datetime()[4], rtc.datetime()[5])
    valor_pot = pot.read()
    valor_bt = bt.value()
 
    if horario != anterior:
        print(f"Data: {data} || Hora: {horario}")
        anterior = horario
 
    sensor.measure()
    temp = sensor.temperature()
    umid = sensor.humidity()
 
    oled.fill(0)
    oled.rect(0, 0, 128, 64, 1)
    oled.text(f"{data}", 15, 5)
    oled.text(f"{horario}",25, 15)
    oled.text(f"Temp: {temp:.1f} C", 5, 25)
    oled.text(f"Umid: {umid:.1f} %", 5, 35)
    oled.text(f"Luz: {valor_pot}", 5, 45)
    oled.text(f"Bt: {valor_bt}", 5, 55)
    oled.show()
 
    if valor_bt == 0:
        msg = "Sensores com valores:\n"
        msg += f"Temperatura: {temp} °C\n"
        msg += f"Umidade: {umid} %\n"
        msg += f"Luminosidade: {valor_pot}"
        message = ("Enviando%20dados%20dos%20sensores%20%5Cn-----------")
        message += ("%5CnLdr%20%3A") + str(valor_pot)
        message += (f"%5CnUmidade%20%3A") + str(umid)
        message +=(f"%5CnTemperatura%20%3A") + str(temp)
        message +=("%5Cn-----------")

 
        oled.fill(0)
        oled.rect(0, 0, 128, 64, 1)
        oled.text("Enviando", 20, 15)
        oled.text("Mensagem...", 15, 30)
        oled.show()
        led_verm.on()  
        led_verd.off()
        
        
        msg_whatsapp(message)
        msg_email(msg)
        
        sleep(1)
    else:
        led_verm.off() 
        led_verd.on()  
 
    sleep(1)
 
